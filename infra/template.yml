# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Application Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.

Parameters:
  #Lambda Parameters
  SecurityGroupId :
    Type: String
    Description: "Security Group for Splunk VPC" 
  VPCSubnetIdList:
    Description: "List of subnets belongin to the Product VPC"
    Type: CommaDelimitedList
  LambdaFunctionRoleArn:
    Type: String
    Description: "Lambda role arn"
  FunctionRuntime:
    Description: "Runtime to be used in the lambda function"
    Type: String
    AllowedValues:
      - "python3.8"
      - "python3.9"
      - "python3.10"
  #Tag Parameters 
  TeamContactEmail:
    Type: String
    Description: "Tech team e-mail"
    Default: 
  OrganizationName: 
    Type: String
    Description: "Organization name where resources will be created at"
    AllowedValues:
      - "stackspot"
      - "controltower"
      - "landing-zone"
      - "aws"
  ServiceName: 
    Type: String
    Description: "Define the service from where the logs will be consumed"
  Environment: 
    Type: String
    Description: "Define which environment resources will be created"
    AllowedValues:
      - "dev"
      - "hom"
      - "pro"
      - "too"
  DataClassification:
    Type: String
    AllowedValues:
      - "internal" 
      - "confidential"  

Resources:
  blockseobotswaf:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 30
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          IPV4_SET_ID: 
          IPV4_SET_NAME: 
          IPV6_SET_ID: 
          IPV6_SET_NAME: 
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - ec2:CreateNetworkInterface
                - ec2:DeleteNetworkInterface
                - ec2:DescribeNetworkInterfaces
              Resource: '*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:sa-east-1:account:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:sa-east-1:account:log-group:/aws/lambda/block-seo-bots-waf:*
            - Effect: Allow
              Action:
                - wafv2:GetIPSet
                - wafv2:ListIPSets
                - wafv2:UpdateIPSet
              Resource: >-
                arn:aws:wafv2:us-east-1:account:global/ipset/block-seo-ipsets-ipv*/*
            - Effect: Allow
              Action:
                - kms:Encrypt
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource: arn:aws:kms:*:account:key*
              Condition:
                ForAnyValue:StringLike:
                  kms:ResourceAliases: aws/lambda
      SnapStart:
        ApplyOn: None
      Tags:
        project:  
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
